plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "$micronautPluginVersion"
}

version = '0.2'
group = "world.deslauriers"

dockerBuild {
    images = ["tdeslauriers/gallery:${project.version}"]
}

dockerBuildNative {
    images = ["tdeslauriers/gallery:${project.version}"]
}

repositories {
    mavenCentral()
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("world.deslauriers.*")
    }
}

dependencies {
    annotationProcessor("io.dekorate:kubernetes-annotations:2.11.1")
    annotationProcessor("io.micronaut:micronaut-validation")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")

    implementation("io.dekorate:kubernetes-annotations:2.11.1")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.serde:micronaut-serde-jackson")

    // database
    implementation("io.micronaut.data:micronaut-data-jdbc")
    runtimeOnly("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.flyway:micronaut-flyway")
    runtimeOnly("org.flywaydb:flyway-mysql")
    runtimeOnly ("mysql:mysql-connector-java")
    compileOnly("org.graalvm.nativeimage:svm")

    // security
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut.security:micronaut-security-jwt")

    runtimeOnly("ch.qos.logback:logback-classic")

    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mysql")

}

application {
    mainClass.set("world.deslauriers.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

test {
    testLogging{
    	
        // Make sure output from
        // standard out or error is shown
        // in Gradle output.
        events 'standard_out', 'standard_error'
    }
}
